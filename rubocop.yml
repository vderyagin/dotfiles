GuardClause:
  Description: 'Check for conditionals that can be replaced with guard clauses'
  Enabled: true

MethodCalledOnDoEndBlock:
  Description: 'Avoid chaining a method call on a do...end block.'
  Enabled: true

SymbolArray:
  Description: 'Use %i or %I for arrays of symbols.'
  Enabled: true

AsciiComments:
  Description: 'Use only ascii symbols in comments.'
  Enabled: false

BeginBlock:
  Description: 'Avoid the use of BEGIN blocks.'
  Enabled: false

BlockComments:
  Description: 'Do not use block comments.'
  Enabled: false

Blocks:
  Description: >-
                Avoid using {...} for multi-line blocks (multiline chaining is
                always ugly).
                Prefer {...} over do...end for single-line blocks.
  Enabled: false

Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: false

Encoding:
  Description: 'Use UTF-8 as the source file encoding.'
  Enabled: true

EndBlock:
  Description: 'Avoid the use of END blocks.'
  Enabled: false

HashSyntax:
  Description: >-
                 Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax
                 { :a => 1, :b => 2 }.
  Enabled: false

Proc:
  Description: 'Use proc instead of Proc.new.'
  Enabled: false

TrailingComma:
  Description: 'Checks for trailing comma in parameter lists and literals.'
  Enabled: false

# Align the elements of a hash literal if they span more than one line.
AlignHash:
  # Alignment of entries using hash rocket as separator. Valid values are:
  #
  # key - left alignment of keys
  #   'a' => 2
  #   'bb' => 3
  # separator - alignment of hash rockets, keys are right aligned
  #    'a' => 2
  #   'bb' => 3
  # table - left alignment of keys, hash rockets, and values
  #   'a'  => 2
  #   'bb' => 3
  EnforcedHashRocketStyle: table
  # Alignment of entries using colon as separator. Valid values are:
  #
  # key - left alignment of keys
  #   a: 0
  #   bb: 1
  # separator - alignment of colons, keys are right aligned
  #    a: 0
  #   bb: 1
  # table - left alignment of keys and values
  #   a:  0
  #   bb: 1
  EnforcedColonStyle: table
  # Select whether hashes that are the last argument in a method call should be
  # inspected? Valid values are:
  #
  # always_inspect - Inspect both implicit and explicit hashes.
  #   Registers and offence for:
  #     function(a: 1,
  #       b: 2)
  #   Registers an offence for:
  #     function({a: 1,
  #       b: 2})
  # always_ignore - Ignore both implicit and explicit hashes.
  #   Accepts:
  #     function(a: 1,
  #       b: 2)
  #   Accepts:
  #     function({a: 1,
  #       b: 2})
  # ignore_implicit - Ingore only implicit hashes.
  #   Accepts:
  #     function(a: 1,
  #       b: 2)
  #   Registers an offence for:
  #     function({a: 1,
  #       b: 2})
  # ignore_explicit - Ingore only explicit hashes.
  #   Accepts:
  #     function({a: 1,
  #       b: 2})
  #   Registers an offence for:
  #     function(a: 1,
  #       b: 2)
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit


ClassLength:
  CountComments: false  # count full line comments?
  Max: 200


# Checks whether the source file has a utf-8 encoding comment or not
Encoding:
  EnforcedStyle: when_needed
  SupportedStyles:
    - when_needed
    - always

FileName:
  Exclude:
    - '**/Rakefile'
    - '**/Rakefile.rb'
    - '**/Gemfile'
    - '**/Capfile'

LineLength:
  Max: 90

SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
    - space
    - no_space
